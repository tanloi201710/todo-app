{"ast":null,"code":"import _slicedToArray from\"/home/tanloi/Documents/React/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import TodoForm from'./TodoForm';import{RiCloseCircleLine}from'react-icons/ri';import{TiEdit}from'react-icons/ti';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Todo(_ref){var todos=_ref.todos,completeTodo=_ref.completeTodo,removeTodo=_ref.removeTodo,updateTodo=_ref.updateTodo;var _useState=useState({id:null,value:''}),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];var submitUpdate=function submitUpdate(value){updateTodo(edit.id,value);setEdit({id:null,value:''});};if(edit.id){return/*#__PURE__*/_jsx(TodoForm,{edit:edit,onSubmit:submitUpdate});}return todos.map(function(todo,index){return/*#__PURE__*/_jsxs(\"div\",{className:todo.isComplete?'todo-row complete':'todo-row',children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return completeTodo(todo.id);},className:\"todo-name\",children:todo.text},todo.id),/*#__PURE__*/_jsxs(\"div\",{className:\"icons\",children:[/*#__PURE__*/_jsx(RiCloseCircleLine,{onClick:function onClick(){return removeTodo(todo.id);},className:\"delete-icon\"}),/*#__PURE__*/_jsx(TiEdit,{onClick:function onClick(){return setEdit({id:todo.id,value:todo.text});},className:\"edit-icon\"})]})]},index);});}export default Todo;","map":{"version":3,"sources":["/home/tanloi/Documents/React/todo-app/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,MAAT,KAAuB,gBAAvB,C,wFAEA,QAASC,CAAAA,IAAT,MAA6D,IAA9CC,CAAAA,KAA8C,MAA9CA,KAA8C,CAAvCC,YAAuC,MAAvCA,YAAuC,CAAzBC,UAAyB,MAAzBA,UAAyB,CAAbC,UAAa,MAAbA,UAAa,CACzD,cAAwBR,QAAQ,CAAC,CAC7BS,EAAE,CAAE,IADyB,CAE7BC,KAAK,CAAE,EAFsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,KAAK,CAAG,CACzBF,UAAU,CAACG,IAAI,CAACF,EAAN,CAAUC,KAAV,CAAV,CACAE,OAAO,CAAC,CACJH,EAAE,CAAE,IADA,CAEJC,KAAK,CAAE,EAFH,CAAD,CAAP,CAIH,CAND,CAQA,GAAGC,IAAI,CAACF,EAAR,CAAY,CACR,mBAAO,KAAC,QAAD,EAAU,IAAI,CAAEE,IAAhB,CAAsB,QAAQ,CAAEE,YAAhC,EAAP,CACH,CAED,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACb,aAAK,SAAS,CAAED,IAAI,CAACE,UAAL,CAAkB,mBAAlB,CAAwC,UAAxD,wBACI,YAAmB,OAAO,CAAE,yBAAMX,CAAAA,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB,EAA5B,CAAyD,SAAS,CAAC,WAAnE,UACKM,IAAI,CAACG,IADV,EAAUH,IAAI,CAACN,EAAf,CADJ,cAII,aAAK,SAAS,CAAC,OAAf,wBACI,KAAC,iBAAD,EACA,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB,EADT,CAEA,SAAS,CAAC,aAFV,EADJ,cAKI,KAAC,MAAD,EACA,OAAO,CAAE,yBAAMG,CAAAA,OAAO,CAAC,CAAEH,EAAE,CAAEM,IAAI,CAACN,EAAX,CAAeC,KAAK,CAAEK,IAAI,CAACG,IAA3B,CAAD,CAAb,EADT,CAEA,SAAS,CAAC,WAFV,EALJ,GAJJ,GAAyEF,KAAzE,CADa,EAAV,CAAP,CAiBH,CAED,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport { TiEdit } from 'react-icons/ti'\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const submitUpdate = value =>{\n        updateTodo(edit.id, value);\n        setEdit({\n            id: null,\n            value: ''\n        });\n    };\n\n    if(edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n            <div key={todo.id} onClick={() => completeTodo(todo.id)} className=\"todo-name\">\n                {todo.text}\n            </div>\n            <div className=\"icons\">\n                <RiCloseCircleLine \n                onClick={() => removeTodo(todo.id)}\n                className=\"delete-icon\"\n                />\n                <TiEdit \n                onClick={() => setEdit({ id: todo.id, value: todo.text})}\n                className=\"edit-icon\"\n                />\n            </div>\n        </div>\n    ))\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}